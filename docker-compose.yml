services:
  db:
    container_name: postgres
    image: postgres:16.3
    environment:
      POSTGRES_USER: sol
      POSTGRES_PASSWORD: password
      POSTGRES_DB: customer  # Ensures DB exists
      PGDATA: /data/postgres
    volumes:
      - db:/data/postgres
    ports:
      - "5332:5432"
    networks:
      - db
    restart: unless-stopped
    healthcheck: #added recently
      test: [ "CMD-SHELL", "pg_isready -U sol" ]
      interval: 5s
      timeout: 5s
      retries: 5
  sol-api:
    container_name: sol-api
    image: solenja/sol-api
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/customer
      SPRING_DATASOURCE_USERNAME: sol  # Just in case
      SPRING_DATASOURCE_PASSWORD: password  # Just in case
    ports:
      - "8088:8080"
    networks:
      - db
    depends_on:
      db: #modified
        condition: service_healthy #as I'm checking the health
    restart: unless-stopped
  sol-react:
    container_name: sol-react
    image: solenja/sol-react
    build:
      context: frontend/react
      args:
        api_base_url: http://sol-api-env.eba-fjgs4ydm.eu-north-1.elasticbeanstalk.com:8080
    ports:
      - "3003:5173"
    depends_on:
      - sol-api
    restart: unless-stopped

networks:
  db:
    driver: bridge

volumes:
  db:

